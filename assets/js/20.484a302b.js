(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{376:function(e,a,t){"use strict";t.r(a);var o=t(9),s=Object(o.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"live-code-reloading"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#live-code-reloading","aria-hidden":"true"}},[e._v("#")]),e._v(" Live code reloading")]),e._v(" "),t("p",[e._v("It can be annoying having to stop and lift your application after each code change during development - especially if you forget to do so and wonder why code changes you've made aren't having any effect!")]),e._v(" "),t("p",[e._v("Fortunately, there are tools we can use to make our development experience smoother.")]),e._v(" "),t("h2",{attrs:{id:"using-nodemon-with-sails-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-nodemon-with-sails-js","aria-hidden":"true"}},[e._v("#")]),e._v(" Using nodemon with Sails.js")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://nodemon.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("nodemon"),t("OutboundLink")],1),e._v(" "),t("em",[e._v('"is a utility that will monitor for any changes in your source and automatically restart your server. Perfect for development."')])]),e._v(" "),t("p",[e._v("Hey - that sounds like something I could get onboard with! Let's set up nodemon to stop and lift our Sails application automatically when our code changes.")]),e._v(" "),t("p",[e._v("First, we'll add nodemon as a development dependency of our project.")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --save-dev nodemon\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# OR")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" --dev nodemon\n")])])]),t("p",[e._v("We can add a simple script to our "),t("code",[e._v("package.json")]),e._v(" file so that we can start our application with nodemon watching for file changes easily.")]),e._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"dev"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"nodemon sails lift --ignore 'assets' --ignore 'views'\"")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("Now we can start our application with nodemon watching for file changes. All we have to do is run the script we added to "),t("code",[e._v("package.json")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run dev\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# OR")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" dev\n")])])]),t("p",[e._v("Hey-presto! Now any time you change a file in your codebase nodemon will restart your Sails application for you.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",[t("em",[t("strong",[e._v("Keep in mind")])]),e._v(" - Your application will be completely stopped and started for every code change.")]),e._v(" "),t("p",[e._v("If you have long-running or destructive code in your "),t("code",[e._v("config/bootstrap.js")]),e._v(" file, or are using Waterline with auto-migrations set to "),t("code",[e._v("drop")]),e._v(" or "),t("code",[e._v("alter")]),e._v(" this could result in slow restarts.")]),e._v(" "),t("p",[e._v("If you are using the default in-memory session store, user sessions and socket connections will not be persisted between reloads ("),t("a",{attrs:{href:"###"}},[e._v("setting up redis")]),e._v(" is easy though!).")])]),e._v(" "),t("h2",{attrs:{id:"using-sails-hook-autoreload"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-sails-hook-autoreload","aria-hidden":"true"}},[e._v("#")]),e._v(" Using sails-hook-autoreload")]),e._v(" "),t("p",[e._v("Another alternative for reloading your application during development is "),t("a",{attrs:{href:"https://github.com/sgress454/sails-hook-autoreload",target:"_blank",rel:"noopener noreferrer"}},[e._v("sails-hook-autoreload"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("There are detailed instructions at the link above for installing and configuring "),t("code",[e._v("sails-hook-autoreload")]),e._v(", however official support for the hook has ended, and it is incompatible with many existing npm modules and Sails application configurations.")])])},[],!1,null,null,null);a.default=s.exports}}]);