(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{293:function(t,e,a){"use strict";a.r(e);var s=a(5),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"case-insensitive-queries-using-postgresql-and-waterline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-insensitive-queries-using-postgresql-and-waterline","aria-hidden":"true"}},[t._v("#")]),t._v(" Case-Insensitive Queries using PostgreSQL and Waterline")]),t._v(" "),a("p",[t._v("An all-too-common requirement when working with records in a database\nis to search by a text field ignoring case. Maybe you're looking for a user\nby username or email address, but when using PostgreSQL and Waterline this doesn't come out of the box.")]),t._v(" "),a("p",[t._v("Enter "),a("a",{attrs:{href:"https://www.postgresql.org/docs/9.1/citext.html",target:"_blank"}},[t._v("citext")]),t._v(', Postgres\' case-insensitive character string type.\n"Essentially, it internally calls lower when comparing values. Otherwise, it behaves almost exactly like text."\nSounds like what we want!')]),t._v(" "),a("h2",{attrs:{id:"installing-citext-extension"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-citext-extension","aria-hidden":"true"}},[t._v("#")]),t._v(" Installing citext extension")]),t._v(" "),a("p",[t._v("Before you are able to take advantage of the citext data-type, you will need to load the required extension into\nyour database.")]),t._v(" "),a("p",[t._v("Using the "),a("code",[t._v("psql")]),t._v(" tool, you'll need to run the following while logged in as the owner of your database:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" extension citext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"waterline-attribute-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#waterline-attribute-example","aria-hidden":"true"}},[t._v("#")]),t._v(" Waterline attribute example")]),t._v(" "),a("p",[t._v('Here is an example of a "username" model attribute using citext with Waterline for case-insensitve querying.')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  columnType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'citext'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  required"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  unique"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A users.. Username'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Notice that we need to explicitly set the "),a("a",{attrs:{href:"https://sailsjs.com/documentation/concepts/models-and-orm/attributes#?columntype",target:"_blank",rel:"noopener noreferrer"}},[t._v("columnType"),a("OutboundLink")],1),t._v("\nso that Waterline can build the correct "),a("code",[t._v("CREATE TABLE")]),t._v(" queries using the "),a("code",[t._v("citext")]),t._v(" column type when running it's migrations/table creation.")])])},[],!1,null,null,null);e.default=n.exports}}]);